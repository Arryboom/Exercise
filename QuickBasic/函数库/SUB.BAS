DECLARE SUB DISPLAY ()
DECLARE SUB INIT ()
DECLARE FUNCTION ACS# (A AS DOUBLE)
DECLARE FUNCTION ASN# (A AS DOUBLE)
DECLARE FUNCTION ATN2# (X AS DOUBLE, Y AS DOUBLE)
DECLARE SUB TRINI (A() AS DOUBLE, B() AS DOUBLE, N AS INTEGER)
DECLARE FUNCTION DET# (A() AS DOUBLE, N AS INTEGER)
DECLARE FUNCTION DMS# (A AS DOUBLE, N AS INTEGER)
DECLARE FUNCTION RAD# (A AS DOUBLE)
DECLARE FUNCTION GETXY% (X AS INTEGER, Y AS INTEGER)
DECLARE SUB MOUSE (BX AS INTEGER, CX AS INTEGER, DX AS INTEGER)
DIM SHARED MOS(0 TO 13) AS INTEGER
SCREEN 9
CALL INIT
CALL DISPLAY
DO
BX = GETXY(X%, Y%)
IF BX <> 0 THEN
LINE (20, 20)-(X%, Y%), 12
ELSE
LINE (20, 20)-(X%, Y%), 2
END IF
LOOP WHILE LEN(INKEY$) = 0
CALL INIT
END

FUNCTION ACS# (A AS DOUBLE)
ACS# = ATN2(A, SQR(1# - A ^ 2))
END FUNCTION

FUNCTION ASN# (A AS DOUBLE)
ASN# = ATN2(SQR(1 - A ^ 2), A)
END FUNCTION

FUNCTION ATN2# (X AS DOUBLE, Y AS DOUBLE)
HALFPI# = 1.570796326794897#
IF ABS(X) > ABS(Y) THEN
A# = HALFPI# * (1 - SGN(X)) + ATN(Y / X)
ELSEIF Y <> 0# THEN
A# = HALFPI# * (2 - SGN(Y)) - ATN(X / Y)
ELSE
A# = 0
END IF
IF A# > 2 * HALFPI# THEN
ATN2# = A# - 4 * HALFPI#
ELSE
ATN2# = A#
END IF
END FUNCTION

SUB DCNI (Q() AS DOUBLE, R() AS DOUBLE, N AS INTEGER)
DEFINT I-K, P
DIM U AS DOUBLE, T AS DOUBLE
P = N * (N + 1) / 2
DIM A(P) AS DOUBLE
FOR I = N TO 1 STEP -1
T = Q(P): P1 = P + I
FOR K = I + 1 TO N
T = T - A(P1) ^ 2: P1 = P1 + K
NEXT K
A(P) = SQR(T): U = 1 / A(P): P = P - 1
FOR J = I - 1 TO 1 STEP -1
T = Q(P): P1 = P + I
FOR K = I + 1 TO N
T = T - A(P1 - J + I) * A(P1): P1 = P1 + K
NEXT K
A(P) = T * U: P = P - 1
NEXT J
NEXT I
CALL TRINI(A(), R(), N)
P = N * (N + 1) / 2: P1 = P
FOR I = N TO 1 STEP -1
P2 = P1: P1 = P1 - I
FOR J = I TO 1 STEP -1
T = 0: P2 = P2 - J
FOR K = 1 TO J
T = T + R(P1 + K) * R(P2 + K)
NEXT K
R(P) = T: P = P - 1
NEXT J
NEXT I
END SUB

DEFSNG I-K, P
FUNCTION DET# (A() AS DOUBLE, N AS INTEGER)
DEFDBL A-Z
DEFINT I-K, P
P2 = 0: S = 1
FOR J = 1 TO N
P = P2 + 1: U = ABS(A(P)): L = J
FOR I = J + 1 TO N
P = P + N: T = ABS(A(P))
IF U < T THEN
U = T: L = I
END IF
NEXT I
IF U < 10 ^ -10 THEN
DET# = 0: EXIT FUNCTION
END IF
IF L <> J THEN
P = P2: P1 = N * (L - J)
FOR K = J TO N
P = P + 1
SWAP A(P), A(P + P1)
NEXT K
S = -S
END IF
P = P2 + 1: T = 1 / A(P): S = S / T
FOR K = J + 1 TO N
P = P + 1: A(P) = T * A(P)
NEXT K
P = J
FOR I = 1 TO N
IF I <> J THEN
T = -A(P): P1 = P: P3 = P2 + 2
FOR K = J + 1 TO N
P1 = P1 + 1: A(P1) = A(P1) + A(P3) * T: P3 = P3 + 1
NEXT K
END IF
P = P + N
NEXT I
P2 = P2 + N + 1
NEXT J
DET# = S
END FUNCTION

DEFINT A-H, L-O, Q-Z
SUB DISPLAY
MOS(0) = &H1B8
CALL MOUSE(BX, CX, DX)
END SUB

DEFSNG A-Z
FUNCTION DMS# (A AS DOUBLE, N AS INTEGER)
DEFDBL A-Z
PI = 3.141592653589793#
S = A * 180 / PI - 360 * INT(.5 * A / PI): D = FIX(S)
IF N <= 1 THEN
DMS# = D: EXIT FUNCTION
END IF
S = 60 * (S - D): M = FIX(S)
IF N <= 3 THEN
DMS# = D + .01 * M: EXIT FUNCTION
END IF
K = 10# ^ (N - 4): S = INT(.5 + 60 * (S - M) * K) / K
IF S = 60# THEN
M = M + 1: S = 0
IF M = 60# THEN
D = D + 1: M = 0
IF D = 360# THEN
D = 0
END IF
END IF
END IF
DMS# = (S * .01 + M) * .01 + D
END FUNCTION

DEFINT I-K, P
SUB GETCH (A AS INTEGER)
DO
AA$ = INKEY$
L = LEN(AA$)
LOOP WHILE L = 0
A = ASC(AA$)
IF L = 2 THEN
A = -ASC(RIGHT$(AA$, 1))
END IF
END SUB

DEFINT A-H, L-O, Q-Z
FUNCTION GETXY% (X AS INTEGER, Y AS INTEGER)
MOS(0) = &H3B8
CALL MOUSE(BX, X, Y)
GETXY% = BX
END FUNCTION

SUB HIDE
MOS(0) = &H2B8
CALL MOUSE(BX, CX, DX)
END SUB

SUB INIT
MOS(0) = &HB8
MOS(1) = &H9000
MOS(2) = &HE8B
MOS(4) = &H168B
MOS(6) = &H33CD
MOS(7) = &H1E89
MOS(9) = &HE89
MOS(11) = &H1689
MOS(13) = &HCB90
CALL MOUSE(BX, CX, DX)
END SUB

DEFSNG A-Z
SUB JZNI (A() AS DOUBLE, B() AS DOUBLE, N AS INTEGER)
DEFDBL A-Z
DEFINT I-K, P
P = 1: P2 = 0
FOR I = 1 TO N
B(P) = 1: P = P + N + 1
NEXT I
FOR J = 1 TO N
P = P2 + 1: U = ABS(A(P)): L = J
FOR I = J + 1 TO N
P = P + N: T = ABS(A(P))
IF U < T THEN
U = T: L = I
END IF
NEXT I
IF U < 10 ^ -10 THEN
PRINT "SUB JZNI:DET A=0": SYSTEM
END IF
IF L <> J THEN
P = P2: P1 = N * (L - J)
FOR K = J TO N
P = P + 1
SWAP A(P), A(P + P1): SWAP B(P), B(P + P1)
NEXT K
P = P2
FOR K = J - 1 TO 1 STEP -1
SWAP B(P), B(P + P1): P = P - 1
NEXT K
END IF
P = P2 + 1: T = 1 / A(P)
FOR K = J + 1 TO N
P = P + 1: A(P) = T * A(P): B(P) = T * B(P)
NEXT K
P = P2 + 1
FOR K = J TO 1 STEP -1
B(P) = T * B(P): P = P - 1
NEXT K
P = J
FOR I = 1 TO N
IF I <> J THEN
T = -A(P): P1 = P: P3 = P2 + 2
FOR K = J + 1 TO N
P1 = P1 + 1: A(P1) = A(P1) + A(P3) * T
B(P1) = B(P1) + B(P3) * T: P3 = P3 + 1
NEXT K
P3 = P2 - J + 2: P1 = P1 - N
FOR K = 1 TO J
P1 = P1 + 1: B(P1) = B(P1) + B(P3) * T: P3 = P3 + 1
NEXT K
END IF
P = P + N
NEXT I
P2 = P2 + N + 1
NEXT J
END SUB

DEFINT A-H, L-O, Q-Z
SUB MOUSE (BX AS INTEGER, CX AS INTEGER, DX AS INTEGER)
MOS(3) = VARPTR(CX)
MOS(5) = VARPTR(DX)
MOS(8) = VARPTR(BX)
MOS(10) = MOS(3)
MOS(12) = MOS(5)
DEF SEG = VARSEG(MOS(0))
CALL ABSOLUTE(VARPTR(MOS(0)))
DEF SEG
END SUB

SUB MOVE (X AS INTEGER, Y AS INTEGER)
MOS(0) = &H4B8
CALL MOUSE(BX, X, Y)
END SUB

DEFDBL A-H, L-O, Q-Z
FUNCTION RAD# (A AS DOUBLE)
S# = ABS(A): D# = INT(S# + .1)
S# = 100# * (S# - D#): M# = INT(S# + .1)
S# = 100# * (S# - M#): S# = INT(S# + .5)
RAD# = SGN(A) * .0174532925199433# * ((S# / 60 + M#) / 60 + D#)
END FUNCTION

DEFSNG A-Z
SUB TRINI (A() AS DOUBLE, B() AS DOUBLE, N AS INTEGER)
DEFDBL A-Z
DEFINT I-K, P
P1 = 0
FOR I = 1 TO N
P1 = P1 + I: B(P1) = 1# / A(P1)
FOR J = I - 1 TO 1 STEP -1
T = 0: P2 = P1 - I + J
FOR K = I - 1 TO J STEP -1
P2 = P2 - K: T = T + A(P1 - I + K) * B(P2)
NEXT K
B(P1 - I + J) = -T * B(P1)
NEXT J
NEXT I
END SUB

